digraph {
    node [style="filled"]

    subgraph terminals {
        node [shape="ellipse", fillcolor="yellow"]

        Source [label="CHMMM source"]
        LLVM [label="LLVM code"]
    }

    subgraph data {
        node [shape="parallelogram"]

        subgraph orangeData {
            node [fillcolor="orange"]

            ASTErrors [label="AST errors"]
            FillingErrors [label="Type instantiation errors"]
            ManglingErrors [label="Mangling errors"]
            UnifyErrors [label="Unification errors"]
            BlockifierErrors [label="Blockifier errors"]
            MonomorphizeErrors [label="Monomorphization errors"]
            VariablesErrors [label="Variable collecton errors"]
        }
        subgraph greenData {
            node [fillcolor="lightgreen"]

            AST
            Facts [label="Type facts"]
            LeftFacts [label="Leftover facts"]
            Variables [label="Variables"]
            ASTTypeElabs [label="AST\nwith elaborations"]
            Judgments [label="Type assigments"]
            FlatAST [label="Flat AST"]
            BlockifiedAST [label="Blockified AST"]
            BlockifiedASTAnnots [label="Blockified AST\nwith analyzed flow"]
            MonoAST [label="Monomorphized AST with type elaborations"]
            FilledMonoAST [label="Monomorphized AST with instantiated types"]
            PostAST [label="Postprocessed AST that can be translated"]
        }

    }

    subgraph components {
        node [shape="component"]

        subgraph greenComponents {
            node [fillcolor="lightblue"]

            FunDepSimpl [label="Functional dependencies\nsimplifier"]
            AnnotMining  [label="Annotation mining"]
            Parser
            Flattener
            Unification
            Prettyprinter
            Preprocess [label="Type inference\npreprocessing"]
            VariableMining [label="Variable collection\n(repeated)"]
            Blockifier
            FlowAnalysis [label="Flow analysis"]
            Inference [label="Type inference"]
            Monomorphization
            ElabFilling [label="elaboration filling"]
            Mangling
            Translator
        }

        subgraph yellowComponents {
            node [fillcolor="yellow"]

        }

    }

    subgraph decisions {
        node [shape="diamond"]
    }


    Source -> Parser -> AST
    AST -> Flattener -> FlatAST
    VariableMining -> VariablesErrors
    AST -> VariableMining -> Variables -> Preprocess
    Facts -> { FunDepSimpl AnnotMining }
    ASTTypeElabs -> AnnotMining
    ASTTypeElabs -> Monomorphization
    { FunDepSimpl AnnotMining } -> Inference -> Judgments -> Monomorphization -> MonoAST -> ElabFilling -> FilledMonoAST -> Mangling -> PostAST -> Prettyprinter
    ElabFilling -> FillingErrors
    Mangling -> ManglingErrors
    { Inference Monomorphization } -> Unification
    FlatAST -> Blockifier -> {BlockifiedAST BlockifierErrors }
    BlockifiedAST -> FlowAnalysis -> BlockifiedASTAnnots
    FlowAnalysis -> BlockifierErrors
    Unification -> { UnifyErrors Monomorphization Inference }
    BlockifiedASTAnnots -> Preprocess -> { Facts ASTTypeElabs }
    Monomorphization -> MonomorphizeErrors
    { FillingErrors ManglingErrors UnifyErrors BlockifierErrors MonomorphizeErrors VariablesErrors LeftFacts } -> ASTErrors -> Prettyprinter
    Inference -> { Prettyprinter LeftFacts }
    PostAST -> Translator -> LLVM
}
